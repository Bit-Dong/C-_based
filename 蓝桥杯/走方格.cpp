/*
题目描述:
在平面上有一些二维的点阵。
这些点的编号就像二维数组的编号一样，从上到下依次为第 1 至第 n 行，从左到右依次为第 1 至第 m 列，每一个点可以用行号和列号来表示。
现在有个人站在第 1 行第 1 列，要走到第 n 行第 m 列。只能向右或者向下走。
注意，如果行号和列数都是偶数，不能走入这一格中。
问有多少种方案。

【输入格式】
输入一行包含两个整数 n, m。

【输出格式】
输出一个整数，表示答案。

【评测用例规模与约定】
对于所有评测用例，1≤n≤30,1≤m≤30。
*/

#include<iostream>
using namespace std;
 
int main(){
	int n,m,i,j;
	int a[35][35];
	cin>>n>>m;   //行  列
	
	for(i=0;i<n;i++)  a[i][0]=1;
	for(j=0;j<m;j++)  a[0][j]=1;
	
	for(i=1;i<n;i++){
		for(j=1;j<m;j++){
			if((i+1)%2==0&&(j+1)%2==0)  a[i][j]=0;
			else
			    a[i][j]=a[i-1][j]+a[i][j-1];
		}
	} 
	cout<<a[n-1][m-1];
}

